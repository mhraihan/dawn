{%- assign mobile_expand_with_entire_link = true -%}

{% style %}
  .logo img {
    width: {{ section.settings.logo_img_width_int }}px;
  }
  .logo-area__middle--logo-image {
    max-width: {{ section.settings.logo_img_width_int }}px;
  }
  @media (max-width: 767.98px) {
    .logo img {
      width: {{ section.settings.mobile_logo_img_width_int }}px;
    }
    .logo-area__middle--logo-image {
      max-width: {{ section.settings.mobile_logo_img_width_int }}px;
    }
  }
  {%- if section.settings.enable_sticky -%}
  .section-header {
    position: -webkit-sticky;
    position: sticky;
  }
  {%- endif -%}
{% endstyle %}

{%- if template == 'gift_card' -%}
  {% comment %} Gift card template logo {% endcomment %}
  {%- if section.settings.logo != blank -%}
    <h1 class="logo">
      {% capture img_size %}{{ section.settings.logo_img_width_int | times: 2 }}x{% endcapture %}
      <img
        src="{{ section.settings.logo | img_url: img_size }}"
        alt="{{ section.settings.logo.alt | escape }}"
        width="{{ section.settings.logo.width }}"
        height="{{ section.settings.logo.height }}"
      >
    </h1>
  {%- else -%}
    <h1>
      <span class="logotext">{{ shop.name }}</span>
    </h1>
  {%- endif -%}

{%- else -%}
  {%- assign featured_links = section.settings.nav_featured_link | split: ', ' -%}
  <div data-section-type="header" class="wide-container" data-cc-animate>
    <div
      id="pageheader"
      class="pageheader pageheader--layout-{{ section.settings.menu_layout }} pageheader--layout-inline-permitted{% if section.settings.enable_sticky %} pageheader--sticky{% endif %} card card--header"
    >
      <div
        class="header-topbar my-2 mx-3 px-2"
      >
        <div class="container-fluid">
          <div class="align-items-center justify-content-between row ">
            <div class="col-12 col-md-3 ">
              <div
                id="weather-container"
                class="flex align-items-center justify-content-md-start justify-content-center"
              >
                <img src="{{ 'Sun Hot.png' | asset_url }}" alt="Sun Hot" width="24" height="24" loading="lazy">
                <span id="city" class="px-1">Sydney</span>
                <span id="clock">{{ 'now' | date: '%I:%M%p' }}</span>
                <span>, </span>
                <span id="weather" class="pl-1"></span>
              </div>
            </div>
            {% if section.settings.announcements != blank %}
            <div class="col-md-3">
              <div class="tickerwrapper">
                <ul class='list'>
                  {% for i in (1..30) %}
                    <li class='listitem'>
                      <span class="uppercase js-header-color-only-mobile">
                        {{ section.settings.announcements }}
                      </span>
                    </li>
                  {% endfor %}
                </ul>
              </div>
            </div>
            {% endif %}
            <div class="col-md-3 hidden-sm">
              <ul class="align-items-center justify-content-end row uppercase">
                <li
                  class="align-items-center flex pr-5"
                  style=""
                >
                  <a class="show-search-link " href="/search">
                    <svg width="26" height="26" viewBox="0 0 26 26" aria-hidden="true" style="width:16px;height:16px;">
                      <g fill="none" fill-rule="evenodd"><g transform="translate(1 1)" stroke="currentColor"><circle cx="10.364" cy="10.364" r="10.364"></circle><path stroke-linecap="square" d="m18 18 5.777 5.788"></path></g></g>
                    </svg>
                    <span class="pl-1 hidden-sm"> Search</span>
                  </a>
                </li>
                <li>
                  {% if shop.customer_accounts_enabled %}
                    {% if customer %}
                      <a
                        class="header-account-link"
                        href="{{ routes.account_url }}"
                        aria-label="{{ 'layout.customer.account' | t }}"
                      >
                        <span class="header-account-link__text desktop-only hidden-sm">
                          {{- 'layout.customer.account' | t -}}
                        </span>
                      </a>
                    {% else %}
                      <a
                        class="header-account-link"
                        href="{{ routes.account_login_url }}"
                        aria-label="{{ 'layout.customer.account' | t }}"
                      >
                        <span class="header-account-link__text desktop-only hidden-sm">Login</span>
                      </a>
                    {% endif %}
                  {% endif %}
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      <div class="logo-area">
        <div class="logo-area__left hidden-sm">
          <div class="logo-area__left__inner">
            <div
              class="navigation navigation--desktop"
              role="navigation"
              aria-label="{{ 'general.navigation.main_navigation_aria_label' | t }}"
            >
              <div class="navigation__tier-1-container">
                {% render 'main-nav-links', section: section %}
              </div>
            </div>
          </div>
        </div>

        <div class="logo-area__middle logo-area__middle--logo-{% if section.settings.logo != blank %}image{% else %}text{% endif %}">
          <div class="logo-area__middle__inner">
            <div class="logo" itemscope itemtype="http://schema.org/Organization">
              <meta itemprop="name" content="{{ shop.name | escape }}">

              {%- if request.page_type == 'index' and section.settings.logo_h1 -%}
                <h1 class="logo__h1">
              {%- endif -%}

              <a class="logo__link" href="{{ routes.root_url }}" title="{{ shop.name }}" itemprop="url">
                {%- if section.settings.logo != blank -%}
                  {%- capture img_size -%}{{ section.settings.logo_img_width_int | times: 2 }}x{%- endcapture -%}
                  <img
                    class="logo__image"
                    src="{{ section.settings.logo | img_url: img_size }}"
                    alt="{{ section.settings.logo.alt | default: shop.name | escape }}"
                    width="{{ section.settings.logo.width }}"
                    height="{{ section.settings.logo.height }}"
                    itemprop="logo"
                  >
                {%- else -%}
                  <span class="logotext">{{ shop.name }}</span>
                {%- endif -%}
              </a>

              {%- if request.page_type == 'index' and section.settings.logo_h1 -%}
                </h1>
              {%- endif -%}
            </div>
          </div>
        </div>

        <div class="logo-area__right">
          <div class="logo-area__right__inner">
            {% if shop.customer_accounts_enabled %}
              {% if customer %}
                <a
                  class="header-account-link hidden-md justify-content-center"
                  href="{{ routes.account_url }}"
                  aria-label="{{ 'layout.customer.account' | t }}"
                >
                  <span class="header-account-link__text desktop-only visually-hidden">
                    {{- 'layout.customer.account' | t -}}
                  </span>
                  <span class="header-account-link__icon">{% render 'svg-user' %}</span>
                </a>
              {% else %}
                <a
                  class="header-account-link hidden-md justify-content-center"
                  href="{{ routes.account_login_url }}"
                  aria-label="{{ 'layout.customer.account' | t }}"
                >
                  <span class="header-account-link__text desktop-only visually-hidden">
                    {{- 'layout.customer.account' | t -}}
                  </span>
                  <span class="header-account-link__icon">{% render 'svg-user' %}</span>
                </a>
              {% endif %}
            {% endif %}
            {% if section.settings.enable_search %}
              <a class="show-search-link desktop-hide flex justify-content-center" href="{{ routes.search_url }}">
                <span class="show-search-link__text visually-hidden">{{ 'layout.search.open' | t }}</span>
                <span class="show-search-link__icon">{% render 'svg-search' %}</span>
              </a>
            {% endif %}

            <a class="cart-link hidden-sm" href="{{ routes.cart_url }}">
              <span class="cart-link__label{% unless section.settings.show_cart_icon_label %} visually-hidden{% endunless %}">
                {{- 'layout.header.cart' | t -}}
              </span>
              <span class="align-items-center cart-link__icon flex">
                <span class="cart-text uppercase">CART</span>
                <span class="cart-link__count">({{ cart.item_count }})</span>
              </span>
            </a>
            <a class="cart-link desktop-hide flex" href="{{ routes.cart_url }}">
              <span class="cart-link__label{% unless section.settings.show_cart_icon_label %} visually-hidden{% endunless %}">
                {{- 'layout.header.cart' | t -}}
              </span>
              <span class="cart-link__icon">
                {%- if section.settings.cart_icon == 'basket' -%}
                  {%- render 'svg-basket' -%}
                {%- elsif section.settings.cart_icon == 'bag' -%}
                  {%- render 'svg-bag' -%}
                {%- else -%}
                  {%- render 'svg-cart' -%}
                {%- endif -%}
                {%- if cart.item_count > 0 -%}
                  <span class="cart-link__count">{{ cart.item_count }}</span>
                {%- endif -%}
              </span>
            </a>
            <button
              class="btn--icon mobile-nav-toggle tap-target"
              aria-label="{{ 'general.navigation.menu_toggle_aria_label' | t }}"
              aria-controls="MobileNavigationDrawer"
            >
              {%- render 'svg-menu' -%}
              {%- render 'svg-x' -%}
            </button>
          </div>
        </div>
      </div>
    </div>

    {%- assign mobile_linklist = section.settings.menu_linklist_mobile | default: section.settings.menu_linklist -%}
    <template class="mobile-navigation-drawer-template">
      <div
        id="MobileNavigationDrawer"
        class="mobile-navigation-drawer"
        data-mobile-expand-with-entire-link="{{ mobile_expand_with_entire_link }}"
      >
        <div
          class="navigation navigation--mobile"
          role="navigation"
          aria-label="{{ 'general.navigation.main_navigation_aria_label' | t }}"
        >
          <div class="navigation__tier-1-container">
            {% render 'main-nav-links', link_list: mobile_linklist, mobile: true, featured_links: featured_links %}
          </div>
        </div>
      </div>
    </template>

    {%- if settings.enable_quick_header_search and section.settings.enable_search and template.name != 'search' -%}
      <script type="text/template" class="header-search-template">
        <div class="header-search-content wide-container">
          <div data-section-id="{{ section.id }}-Search" data-section-type="search-template" data-filter-section-id="" data-alter-location="false" data-search-while-typing="true" data-ajax-filtering="true" data-components="modal,price-range">
            <h2 class="visually-hidden">{{ 'general.search.title' | t }}</h2>

            <div class="main-search fully-spaced-row--medium" data-ajax-scroll-to>
              <span class="main-search__btn-offset" aria-hidden="true">{{ 'general.accessibility_labels.close' | t }}</span>
              <div class="main-search__container">
                <form class="main-search__form" action="{{ routes.search_url }}" method="get" autocomplete="off">
                  <input type="hidden" name="type" value="{{ settings.search_type }}" />
                  <input type="hidden" name="options[prefix]" value="last" />
                  <div class="main-search__input-container">
                    <input
                      class="main-search__input"
                      type="search"
                      name="q"
                      autocomplete="off"
                      placeholder="{{ 'general.search.placeholder' | t }}"
                      aria-label="{{ 'general.search.input_label' | t }}"
                      value="" />
                  </div>
                  <button class="main-search__button main-search__button--submit btn--icon tap-target" type="submit" aria-label="{{ 'general.search.submit' | t }}">{% render 'svg-search' %}</button>
                  <button class="main-search__button main-search__button--clear btn--icon tap-target" type="reset" aria-label="{{ 'general.search.clear' | t }}">{% render 'svg-x' %}</button>
                </form>
              </div>
              <button class="btn btn--plain-text main-search__close">{{ 'general.accessibility_labels.close' | t }}</button>
            </div>

            <div class="container page-header page-header--triplet page-header--empty-right" data-ajax-scroll-to>
              <div class="page-header__left" data-ajax-container="filter-button">
              </div>
              <div class="page-header__middle" data-ajax-container="result-count">
              </div>
              <div class="page-header__right"></div>
            </div>

            <div class="filter-container">
              <div class="filter-modal cc-popup cc-popup--left" aria-hidden="true" data-freeze-scroll="true">
                <div class="cc-popup-background"></div>
                <div class="cc-popup-modal" role="dialog" aria-modal="true" aria-labelledby="FilterHeading">
                  <div class="cc-popup-container">
                    <button type="button" class="cc-popup-close tap-target" aria-label="{{ 'general.accessibility_labels.close' | t }}">
                      {%- render 'popup-close' -%}
                    </button>
                    <div class="cc-popup-content" data-ajax-container="filters">>
                      <form id="CollectionFilterForm" class="hidden">
                        <input type="hidden" name="q" value="">
                        <input type="hidden" name="type" value="{{ settings.search_type }}" />
                        <input type="hidden" name="options[prefix]" value="last" />
                      </form>
                    </div>
                  </div>
                </div>
              </div>
              <div class="filters-adjacent collection-listing" data-ajax-container="products">
            </div>
            <div class="pagination-row" data-ajax-container="pagination"></div>
          </div>
          <div class="before-search-content" data-ajax-container="before-search-content"></div>
        </div>
      </script>
    {%- endif -%}
  </div>

  <script id="InlineNavigationCheckScript">
    theme.inlineNavigationCheck = function () {
      var pageHeader = document.querySelector('.pageheader'),
        inlineNavContainer = pageHeader.querySelector('.logo-area__left'),
        inlineNav = inlineNavContainer.querySelector('.navigation');

      if (inlineNav && getComputedStyle(inlineNav).display != 'none') {
        var inlineMenuCentered = document.querySelector('.pageheader--layout-inline-menu-center'),
          logoContainer = pageHeader.querySelector('.logo-area__middle__inner'),
          availableNavWidth = inlineNavContainer.offsetWidth;
        if (inlineMenuCentered) {
          var rightWidth = pageHeader.querySelector('.logo-area__right__inner').clientWidth,
            middleWidth = logoContainer.clientWidth,
            logoArea = pageHeader.querySelector('.logo-area'),
            computedLogoAreaStyle = getComputedStyle(logoArea),
            logoAreaInnerWidth =
              logoArea.clientWidth -
              Math.ceil(parseFloat(computedLogoAreaStyle.paddingLeft)) -
              Math.ceil(parseFloat(computedLogoAreaStyle.paddingRight));
          availableNavWidth = logoAreaInnerWidth - Math.max(rightWidth, middleWidth) * 2 - 40;
        }
        theme.enqueueStyleUpdate(() => {
          pageHeader.classList.toggle(
            'pageheader--layout-inline-permitted',
            availableNavWidth >= inlineNav.clientWidth
          );
        });
      }
    };
    setTimeout(theme.inlineNavigationCheck, 0);
  </script>
{%- endif -%}
{% javascript %}
  function displayCity(cityName, temperature) {
    // Update city name and temperature in the DOM
    if (temperature) {
      window
        .jQuery('#weather-container')
        .fadeOut('slow', function () {
          document.getElementById('city').innerHTML = cityName;
          document.getElementById('weather').innerHTML = temperature + '°C';
        })
        .delay(250)
        .fadeIn()
        .promise()
        .done(function () {
          // additional actions to perform after animation completes
        });
    } else {
      console.error('temperature is null for ' + cityName);
    }
  }
  const apiKey = '3dc8429b48a3c20d708348838dbf293f';
  let cities = {
    2147714: {
      name: 'Sydney',
      temperature: null,
    },
    2158177: {
      name: 'Melbourne',
      temperature: null,
    },
    2174003: {
      name: 'Brisbane',
      temperature: null,
    },
    2063523: {
      name: 'Perth',
      temperature: null,
    },
    2172517: {
      name: 'Canberra',
      temperature: null,
    },
    2078025: {
      name: 'Adelaide',
      temperature: null,
    },
    2073124: {
      name: 'Darwin',
      temperature: null,
    },
    2163355: {
      name: 'Hobart',
      temperature: null,
    },
    2165087: {
      name: 'Gold Coast',
      temperature: null,
    },
    2172797: {
      name: 'Cairns',
      temperature: null,
    },
  };

  // array of city IDs

  const cityIds = Object.keys(cities);
  if (Cookies.get('cities')) {
    cities = JSON.parse(Cookies.get('cities'));
    displayCity(cities[2147714]['name'], cities[2147714]['temperature']);
  } else {
    cityIds.forEach((cityId, index, arr) => {
      fetch(`https://api.openweathermap.org/data/2.5/weather?id=${cityId}&appid=${apiKey}&units=metric`)
        .then((response) => response.json())
        .then((data) => {
          const cityName = data.name;
          const temperature = data.main.temp;
          cities[cityId]['temperature'] = temperature;
          // cities[cityId]['weather'] = weather;
          // console.log(`${index} ${arr.length} Current temperature in ${cityName} is ${temperature} degrees Celsius.`);
          if (cityId == 2147714) {
            displayCity(cityName, temperature);
          }

          if (index === arr.length - 1) {
            setTimeout(() => {
              Cookies.set('cities', JSON.stringify(cities), { expires: 1 / 24 });
            }, 1000);
          }
        })
        .catch((error) => {
          console.log(`Failed to retrieve weather data for city with ID ${cityId}:`, error);
        });
    });
  }

  if (typeof Worker !== 'undefined') {
    // Web Worker is supported
    var clockWorker = new Worker(
      URL.createObjectURL(
        new Blob(
          [
            `
          let count = 1;
          let cityIndex = 1;
          let cityIds;
   
          onmessage = function(event) {
            cityIds = event.data;
                // Update the clock every second
          setInterval(displayTime, 1000);
          };

          function displayTime() {
            let now = new Date();
            let hours = now.getHours();
            let minutes = now.getMinutes();
            let seconds = now.getSeconds();
            let meridiem = "AM";
           
            // Convert to 12-hour format
            if (hours > 12) {
              hours -= 12;
              meridiem = "PM";
            }

            // Pad with leading zeros if needed
            if (hours < 10) {
              hours = "0" + hours;
            }
            if (minutes < 10) {
              minutes = "0" + minutes;
            }
            if (seconds < 10) {
              seconds = "0" + seconds;
            }
            // Display the time
            let timeString = hours + ":" + minutes + " " + meridiem;
             
            postMessage({ type: 'clock', timeString: timeString });
            // change the weather
            count++;
            if(count == 5){
              count = 0;
              const city = cityIds[cityIndex % cityIds.length];
           
              cityIndex++;
              postMessage({ type: 'update', city: city });
            }

            
          }
      
        `,
          ],
          { type: 'text/javascript' }
        )
      )
    );
    clockWorker.postMessage(cityIds);

    // Listen for messages from the web worker
    clockWorker.onmessage = function (event) {
      if (event.data.type === 'update') {
        // Update the DOM with the received data
        // console.log(event.data.city, event.data);
        displayCity(cities[event.data.city]['name'], cities[event.data.city]['temperature']);
      }

      if (event.data.type === 'clock') {
        document.getElementById('clock').innerHTML = event.data.timeString;
      }
    };
  } else {
    // Web Worker is not supported
    console.log('Web Worker is not supported by your browser.');
  }
{% endjavascript %}

{% schema %}
{
  "name": "Header",
  "class": "section-header",
  "settings": [
    {
      "type": "header",
      "content":"Announcements Bar"
    },
    {
      "type": "textarea",
      "id": "announcements",
      "label": "Announcements",
      "default": "Free shipping for orders over $99"
    },
    {
      "type": "header",
      "content":"Announcements Bar"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo",
      "info": "520 x 200px (recommended)"
    },
    {
      "type": "range",
      "id": "logo_img_width_int",
      "min": 30,
      "max": 500,
      "step": 5,
      "unit": "px",
      "label": "Logo width",
      "default": 180
    },
    {
      "type": "range",
      "id": "mobile_logo_img_width_int",
      "min": 30,
      "max": 300,
      "step": 5,
      "unit": "px",
      "label": "Mobile logo width",
      "default": 100
    },
    {
      "type": "checkbox",
      "id": "logo_h1",
      "label": "Enable logo <h1> on home page",
      "info": "For SEO. Deselect only if another section on the home page contains a primary page heading. [Learn more](https://cleancanvas.co.uk/support/mode/section-h1-setting)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sticky",
      "label": "Enable sticky header",
      "default": false
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "paragraph",
      "content": "Drawer navigation will be used on desktop if the links do not fit in one line."
    },
    {
      "type": "link_list",
      "id": "menu_linklist",
      "label": "Menu",
      "default": "main-menu"
    },
    {
      "type": "link_list",
      "id": "menu_linklist_mobile",
      "label": "Drawer menu",
      "info": "Select a different menu for drawer navigation. Used on mobile. Main menu is used if not selected."
    },
    {
      "type": "select",
      "id": "menu_layout",
      "label": "Menu alignment",
      "options": [
        {
          "value": "inline-menu-left",
          "label": "Left"
        },
        {
          "value": "inline-menu-center",
          "label": "Center"
        }
      ],
      "default": "inline-menu-left"
    },
    {
      "type": "text",
      "id": "nav_featured_link",
      "label": "Featured link",
      "info": "Enter the title of a link to highlight it in a different color",
      "default": "Sale"
    },
    {
      "type": "header",
      "content": "Drawer navigation"
    },
    {
      "type": "checkbox",
      "id": "enable_mobile_promo_carousel",
      "label": "Enable carousel layout for menu promotions",
      "info": "Disabled for dropdown menus containing only promotions",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_nav_mob_products",
      "label": "Enable featured products",
      "info": "Shows beneath the main menu",
      "default": false
    },
    {
      "type": "text",
      "id": "nav_mob_products_title",
      "label": "Featured products title",
      "default": "Best Sellers"
    },
    {
      "type": "collection",
      "id": "nav_mob_products_collection",
      "label": "Featured products collection"
    },
    {
      "type": "header",
      "content": "Search"
    },
    {
      "type": "checkbox",
      "id": "enable_search",
      "label": "Enable search",
      "default": true
    },
    {
      "type": "header",
      "content": "Icons"
    },
    {
      "type": "select",
      "id": "cart_icon",
      "label": "Cart icon",
      "options": [
        {
          "value": "bag",
          "label": "Bag"
        },
        {
          "value": "basket",
          "label": "Basket"
        },
        {
          "value": "cart",
          "label": "Cart"
        }
      ],
      "default": "basket"
    },
    {
      "type": "checkbox",
      "id": "show_cart_icon_label",
      "label": "Show cart icon label",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "menu",
      "name": "Megamenu",
      "limit": 10,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Link name",
          "info": "The name of any top-level link"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Link URL"
        },
        {
          "type": "header",
          "content": "Menu Link"
        },
        {
          "type": "checkbox",
          "id": "show",
          "label": "Show Megamenu",
          "info": "Enable / Disable megamenu"
        },
        {
          "type": "link_list",
          "id": "menu1",
          "label": "Menu 1",
          "info": "Select Navigation menu 1"
        },
        {
          "type": "link_list",
          "id": "menu2",
          "label": "Menu 2",
          "info": "Select Navigation menu 2"
        },
        {
          "type": "link_list",
          "id": "menu3",
          "label": "Menu 3",
          "info": "Select Navigation menu 3"
        },
        {
          "type": "header",
          "content": "Menu Image"
        },
        {
          "type": "text",
          "id": "image_title",
          "label": "Image Title",
          "info": "The name of the image heading"
        },
        {
          "type": "image_picker",
          "id": "image1",
          "label": "Image 1"
        },
        {
          "type": "text",
          "id": "image_title1",
          "label": "Heading",
          "default": "Wide menu"
        },
        {
          "type": "url",
          "id": "image_1_link",
          "label": "Image 1 link"
        },
        {
          "type": "image_picker",
          "id": "image2",
          "label": "Image 2"
        },
        {
          "type": "text",
          "id": "image_title2",
          "label": "Heading",
          "default": "Wide menu"
        },
        {
          "type": "url",
          "id": "image_2_link",
          "label": "Image 2 link"
        },
        {
          "type": "image_picker",
          "id": "image3",
          "label": "Image 3"
        },
        {
          "type": "text",
          "id": "image_title3",
          "label": "Heading",
          "default": "Wide menu"
        },
        {
          "type": "url",
          "id": "image_3_link",
          "label": "Image 3 link"
        }
      ]
    }
  ]
}
{% endschema %}
